version: '3.8'

services:
  # PostgreSQL database for content metadata
  postgres:
    image: postgres:15-alpine
    container_name: simple-content-postgres
    ports:
      - "5433:5432"  # Using 5433 to avoid conflict with local postgres
    environment:
      POSTGRES_DB: simple_content
      POSTGRES_USER: content
      POSTGRES_PASSWORD: contentpass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U content -d simple_content"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - simple-content-network

  # MinIO service for object storage
  minio:
    image: minio/minio
    container_name: simple-content-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - simple-content-network

  # Simple Content Files API service
  files-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: simple-content-files-api
    ports:
      - "4000:4000"
    environment:
      # Server configuration
      - HOST=0.0.0.0
      - PORT=4000
      
      # Database configuration (uses local postgres by default, can override with external)
      - CONTENT_PG_HOST=postgres
      - CONTENT_PG_PORT=5432
      - CONTENT_PG_NAME=simple_content
      - CONTENT_PG_USER=content
      - CONTENT_PG_PASSWORD=contentpass
      
      # S3/MinIO configuration
      - AWS_S3_ENDPOINT=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_S3_BUCKET=content-bucket
      - AWS_S3_REGION=us-east-1
      - AWS_S3_USE_SSL=false
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - simple-content-network
      - powercard-net

volumes:
  postgres-data:
  minio-data:

networks:
  simple-content-network:
    driver: bridge
  powercard-net:
    external: true